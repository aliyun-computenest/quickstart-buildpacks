Service:
  RegionId: cn-hangzhou
  DeployType: ros
  DeployMetadata:
    ServiceInstanceNameRule:
      Prefix: buildpacks-
    SupplierDeployMetadata:
      ArtifactRelation:
        'centos_7_20G_buildpacks':
          ArtifactId: ${Artifact.EcsImage.ArtifactId}
          ArtifactVersion: ${Artifact.EcsImage.ArtifactVersion}
    TemplateConfigs:
      - Name: 新建ECS实例
        Url: 'ros_templates/template-create-ecs.yaml'
        AllowedRegions:
          - ap-southeast-1
  ServiceType: private
  ServiceInfo:
    Locale: zh-CN
    ShortDescription: buildpacks deploy
    Image: 'resources/icons/service_logo.png'
Artifact:
  EcsImage:
    ArtifactType: EcsImage
    ArtifactName: aliyun_3_2104_buildpacks_0_36_1
    Description: Buildpacks on Alibaba cloud linux 3.2104
    ArtifactBuildProperty:
      RegionId: ap-southeast-1
      SourceImageId: aliyun_3_x64_20G_alibase_20241218.vhd
      CommandContent: |-
        #!/bin/bash
  
        # 安装和配置docker-ce
        yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
        yum makecache
        yum install -y docker-ce
        systemctl enable docker
        mkdir -p /etc/docker
        tee /etc/docker/daemon.json <<-'EOF'
        {
            "registry-mirrors": [
                "https://mirrors-ssl.aliyuncs.com/"
            ]
        }
        EOF
        systemctl restart docker
        
        # 安装其他依赖
        yum install -y curl git

        # 安装logtail用于上报构建日志
        LOGTAIL_URL="http://logtail-release-ap-southeast-1.oss-ap-southeast-1-internal.aliyuncs.com/linux64/logtail.sh"
        if ! curl -fsSL "$LOGTAIL_URL" -o logtail.sh; then
            echo "Failed to download logtail.sh."
            exit 1
        fi
        chmod +x logtail.sh
        ./logtail.sh install ap-southeast-1
        
        # 下载并安装pack
        PACK_VERSION="0.36.4"
        DOWNLOAD_URL="https://github.com/buildpacks/pack/releases/download/v${PACK_VERSION}/pack-v${PACK_VERSION}-linux.tgz"
        CHECKSUM_URL="${DOWNLOAD_URL}.sha256"
        # 下载并校验 pack 文件
        echo "Downloading pack v${PACK_VERSION}..."
        if ! curl -fsSL "$DOWNLOAD_URL" -o pack.tgz; then
            echo "Failed to download pack v${PACK_VERSION}."
            exit 1
        fi
        echo "Downloading completed."
        echo "Verifying checksum..."
        if ! curl -fsSL "$CHECKSUM_URL" -o pack.tgz.sha256; then
            echo "Failed to download checksum file."
            exit 1
        fi
        if ! sha256sum --check --status pack.tgz.sha256; then
            echo "Checksum verification failed."
            exit 1
        fi
        echo "Checksum verified successfully."
        tar xvf pack.tgz
        mv pack /usr/local/bin/pack
        rm pack.tgz pack.tgz.sha256

        # 拉取推荐builder镜像，便于切换
        # https://cloud.google.com/docs/buildpacks/builders?hl=zh-cn
        docker pull gcr.io/buildpacks/builder:latest
        
        # https://github.com/heroku/cnb-builder-images
        # heroku builder不支持latest tag
        docker pull heroku/builder:24

        # paketo的builder镜像更新很频繁
        # https://github.com/paketo-buildpacks/builder-jammy-full
        docker pull paketobuildpacks/builder-jammy-full

        # 指定默认builder
        pack config default-builder heroku/builder:24

        # 避免每次下载新的builder镜像；相应的，artifact需要定时更新
        pack config pull-policy if-not-present
    SupportRegionIds:
      - ap-southeast-1