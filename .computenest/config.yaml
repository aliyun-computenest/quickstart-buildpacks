Service:
  RegionId: cn-hangzhou
  DeployType: ros
  DeployMetadata:
    ServiceInstanceNameRule:
      Prefix: buildpacks-
    SupplierDeployMetadata:
      ArtifactRelation:
        'centos_7_20G_buildpacks':
          ArtifactId: ${Artifact.EcsImage.ArtifactId}
          ArtifactVersion: ${Artifact.EcsImage.ArtifactVersion}
    TemplateConfigs:
      - Name: 选择ECS实例（Linux）
        Url: 'ros_templates/template-select-ecs.yaml'
        AllowedRegions:
          - cn-qingdao
          - cn-beijing
          - cn-zhangjiakou
          - cn-huhehaote
          - cn-wulanchabu
          - cn-hangzhou
          - cn-shanghai
          - cn-nanjing
          - cn-shenzhen
          - cn-heyuan
          - cn-guangzhou
          - cn-fuzhou
          - cn-wuhan-lr
          - cn-chengdu
          - cn-hongkong
          - ap-northeast-1
          - ap-northeast-2
          - ap-southeast-1
          - ap-southeast-3
          - ap-southeast-6
          - ap-southeast-5
          - ap-southeast-7
          - us-east-1
          - us-west-1
          - eu-west-1
          - me-east-1
          - eu-central-1
      - Name: 新建ECS实例
        Url: 'ros_templates/template-create-ecs.yaml'
        AllowedRegions:
          - cn-qingdao
          - cn-beijing
          - cn-zhangjiakou
          - cn-huhehaote
          - cn-wulanchabu
          - cn-hangzhou
          - cn-shanghai
          - cn-nanjing
          - cn-shenzhen
          - cn-heyuan
          - cn-guangzhou
          - cn-fuzhou
          - cn-wuhan-lr
          - cn-chengdu
          - cn-hongkong
          - ap-northeast-1
          - ap-northeast-2
          - ap-southeast-1
          - ap-southeast-3
          - ap-southeast-6
          - ap-southeast-5
          - ap-southeast-7
          - us-east-1
          - us-west-1
          - eu-west-1
          - me-east-1
          - eu-central-1
  ServiceType: private
  ServiceInfo:
    Locale: zh-CN
    ShortDescription: buildpacks deploy
    Image: 'resources/icons/service_logo.png'
Artifact:
  EcsImage:
    ArtifactType: EcsImage
    ArtifactName: aliyun_3_2104_buildpacks_0_36_1
    Description: Buildpacks v0.36.1 on Alibaba cloud linux 3.2104
    ArtifactBuildProperty:
      RegionId: ap-southeast-1
      # 使用最新的LTS版本Alibaba Cloud Linux
      SourceImageId: aliyun_3_x64_20G_alibase_20241103.vhd
      CommandContent: |-
        #!/bin/bash
        yum check-update
        yum update -y

        # 安装云监控Agent
        ARGUS_VERSION=3.5.7 /bin/bash -c "$(curl -sS https://cms-agent-ap-southeast-1.oss-ap-southeast-1-internal.aliyuncs.com/Argus/agent_install_ecs-1.7.sh)" 2>&1
  
        # 安装docker-ce
        yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
        yum makecache
        yum install -y wget curl unzip git jq
        yum install -y docker-ce
        systemctl enable docker
        mkdir -p /etc/docker
        tee /etc/docker/daemon.json <<-'EOF'
        {
            "registry-mirrors": [
                "https://mirrors-ssl.aliyuncs.com/"
            ]
        }
        EOF
        systemctl restart docker
        # 安装buildpacks
        curl -L https://github.com/buildpacks/pack/releases/download/v0.36.1/pack-v0.36.1-linux.tgz -o pack.tgz
        tar xvf pack.tgz
        mv pack /usr/local/bin/pack
        rm pack.tgz
        pack config default-builder gcr.io/buildpacks/builder
  
        function clean_log(){
            rm -fv /usr/local/aegis/aegis_update/data/data.[0-9]
            rm -fv /usr/local/aegis/aegis_client/aegis_*/data/data.[0-9]
  
            rm -fv /usr/local/aegis/globalcfg/domaincfg.ini 
            rm -fv /opt/aegis/globalcfg/domaincfg.ini
  
            rm -rf /var/log/cron
            rm -rf /var/log/cloud-init.log
            rm -f /var/log/anaconda.*
            rm -f /var/log/sa/*
            rm -rf /var/log/conman*
            [ -f /var/log/messages ] && >  /var/log/messages
            rm -f /var/log/*.[0-9]*
            rm -rfv /var/lib/apt/lists/*
            rm -rfv /var/log/installer/syslog
            rm -rfv /var/log/journal/*
            rm -rfv /var/log/installer/cdebconf/questions.dat
            rm -rfv /var/cache/yum/*
            rm -rfv /var/cache/dnf/*
            rm -rfv /var/lib/yum/history/*
            rm -rfv /var/lib/dnf/history*
            rm -rfv /var/lib/dhclient/*
            rm -rfv /var/lib/dhcp/*
            rm -rfv /var/lib/aliyun_init/*
            rm -rfv /var/lib/cloud
            rm -rfv /etc/ssh/sshd_config.d/50-cloud-init.conf
  
            if [ -d /usr/local/share/aliyun-assist/*/log/ ];then
                rm -rfv  /usr/local/share/aliyun-assist/*/log/*
            fi
            rm -rf  /var/log/ecsgo.log*
  
            rm -rf /tmp/*
            rm -f /root/{.bash_history,.viminfo,*.cfg,*.log*}
            rm -rf /root/script
  
            for i in $(find /var/log/ -type f); do > $i; done
  
            sed -i "/iZ*Z/d" /etc/hosts
            sed -i "/AliYun/d" /etc/hosts
            # for ubuntu22/24 use cloud-init autoinstall remained hostnaem Aliyun
            sed -i "/Aliyun/d" /etc/hosts
            sed -i "/debug/d" /etc/hosts
            # Clean up useless nameservers to prevent cloudinit local domain name resolution timeout
            sed -i "/nameserver/d" $(realpath /etc/resolv.conf)
            rm -rfv /tmp/*
            [ -d /etc/NetworkManager/system-connections ] && rm -fv /etc/NetworkManager/system-connections/*.nmconnection
            if [[ ! -L /etc/udev/rules.d/70-persistent-net.rules ]];then
                rm -rfv /etc/udev/rules.d/70-persistent-net.rules
            fi
            sync
            sync
            sync
        }
  
        function clean_source_cache(){
            if [ `which zypper` ]; then
                zypper clean; rm -fv /etc/zypp/repos.d/CUSTOM*
            elif [ `which apt-get` ]; then
                apt-get -q clean; apt-get -q autoclean; apt-get -q -y autoremove;
            elif [ `which yum` ]; then
                yum clean all;
            elif [ `which pkg` ]; then
                pkg autoremove
            fi
        }
  
        function clean_root_passwd(){
            passwd -l root
            sed -i '/PasswordAuthentication/d' /etc/ssh/sshd_config
            echo 'PasswordAuthentication no' >> /etc/ssh/sshd_config
            sed -i -e 's/root:[^:]*:/root:*:/g' /etc/shadow
  
            rm -f /root/.ssh/known_hosts
            rm -f /etc/ssh/ssh_host_*
        }
  
  
        function clean_cmd_history(){
            for user in $(cut -f1 -d: /etc/passwd); do
                if [ -f /home/$user/.bash_history ]; then
                    > /home/$user/.bash_history
                fi
            done
            > /root/.bash_history
        }
  
        clean_source_cache
        clean_log
        clean_root_passwd
        clean_cmd_history
        true
    SupportRegionIds:
      - cn-hangzhou
      - cn-beijing
      - cn-shanghai
      - ap-southeast-1
      - cn-qingdao
      - cn-zhangjiakou
      - cn-huhehaote
      - cn-wulanchabu
      - cn-nanjing
      - cn-shenzhen
      - cn-heyuan
      - cn-guangzhou
      - cn-fuzhou
      - cn-wuhan-lr
      - cn-chengdu
      - cn-hongkong
      - ap-northeast-1
      - ap-northeast-2
      - ap-southeast-3
      - ap-southeast-6
      - ap-southeast-5
      - ap-southeast-7
      - us-east-1
      - us-west-1
      - eu-west-1
      - me-east-1
      - eu-central-1